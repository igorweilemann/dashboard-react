{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/weilemann/code/react/dashboard-react/app/seed/clean/route.ts"],"sourcesContent":["import { db } from '@vercel/postgres';\n\nconst client = await db.connect();\n\nasync function cleanUpDatabase() {\n  try {\n    await client.sql`BEGIN`;\n\n    // Remove duplicate users, keeping the earliest ID\n    await client.sql`\n      DELETE FROM users\n      WHERE id NOT IN (\n          SELECT MIN(id) FROM users GROUP BY email\n      );\n    `;\n\n    // Remove duplicate customers, keeping the earliest ID\n    await client.sql`\n      DELETE FROM customers\n      WHERE id NOT IN (\n          SELECT MIN(id) FROM customers GROUP BY email\n      );\n    `;\n\n    // Remove duplicate invoices, keeping the earliest ID for each customer\n    await client.sql`\n      DELETE FROM invoices\n      WHERE id NOT IN (\n          SELECT MIN(id) FROM invoices GROUP BY customer_id, amount, status, date\n      );\n    `;\n\n    // Remove duplicate revenue entries, keeping the earliest entry for each month\n    await client.sql`\n      DELETE FROM revenue\n      WHERE ctid NOT IN (\n          SELECT MIN(ctid) FROM revenue GROUP BY month\n      );\n    `;\n\n    await client.sql`COMMIT`;\n    console.log('Database cleanup successful.');\n    return { message: 'Database cleanup successful' };\n  } catch (error) {\n    await client.sql`ROLLBACK`;\n    console.error('Database cleanup failed:', error);\n    return { error: 'Database cleanup failed' };\n  }\n}\n\n// Run the cleanup function when this file is executed\ncleanUpDatabase().then((result) => console.log(result));"],"names":[],"mappings":";AAAA;AAAA;;AAEA,MAAM,SAAS,MAAM,yRAAA,CAAA,KAAE,CAAC,OAAO;AAE/B,eAAe;IACb,IAAI;QACF,MAAM,OAAO,GAAG,CAAC,KAAK,CAAC;QAEvB,kDAAkD;QAClD,MAAM,OAAO,GAAG,CAAC;;;;;IAKjB,CAAC;QAED,sDAAsD;QACtD,MAAM,OAAO,GAAG,CAAC;;;;;IAKjB,CAAC;QAED,uEAAuE;QACvE,MAAM,OAAO,GAAG,CAAC;;;;;IAKjB,CAAC;QAED,8EAA8E;QAC9E,MAAM,OAAO,GAAG,CAAC;;;;;IAKjB,CAAC;QAED,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC;QACxB,QAAQ,GAAG,CAAC;QACZ,OAAO;YAAE,SAAS;QAA8B;IAClD,EAAE,OAAO,OAAO;QACd,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC;QAC1B,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO;YAAE,OAAO;QAA0B;IAC5C;AACF;AAEA,sDAAsD;AACtD,kBAAkB,IAAI,CAAC,CAAC,SAAW,QAAQ,GAAG,CAAC"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}